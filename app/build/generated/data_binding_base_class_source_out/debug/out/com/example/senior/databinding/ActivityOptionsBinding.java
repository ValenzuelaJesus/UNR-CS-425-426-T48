// Generated by view binder compiler. Do not edit!
package com.example.senior.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.senior.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOptionsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton Accessibility;

  @NonNull
  public final AppCompatButton TextToSpeech;

  @NonNull
  public final AppCompatButton colorblindbutton;

  @NonNull
  public final ConstraintLayout coordinatorLayout;

  @NonNull
  public final AppCompatButton devoptions;

  @NonNull
  public final AppCompatButton exitbutton;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final AppCompatButton myIntructors;

  @NonNull
  public final AppCompatButton resetoptionsbutton;

  @NonNull
  public final TextView textView2;

  private ActivityOptionsBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton Accessibility, @NonNull AppCompatButton TextToSpeech,
      @NonNull AppCompatButton colorblindbutton, @NonNull ConstraintLayout coordinatorLayout,
      @NonNull AppCompatButton devoptions, @NonNull AppCompatButton exitbutton,
      @NonNull ImageView imageView4, @NonNull AppCompatButton myIntructors,
      @NonNull AppCompatButton resetoptionsbutton, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.Accessibility = Accessibility;
    this.TextToSpeech = TextToSpeech;
    this.colorblindbutton = colorblindbutton;
    this.coordinatorLayout = coordinatorLayout;
    this.devoptions = devoptions;
    this.exitbutton = exitbutton;
    this.imageView4 = imageView4;
    this.myIntructors = myIntructors;
    this.resetoptionsbutton = resetoptionsbutton;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOptionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOptionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_options, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOptionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Accessibility;
      AppCompatButton Accessibility = ViewBindings.findChildViewById(rootView, id);
      if (Accessibility == null) {
        break missingId;
      }

      id = R.id.TextToSpeech;
      AppCompatButton TextToSpeech = ViewBindings.findChildViewById(rootView, id);
      if (TextToSpeech == null) {
        break missingId;
      }

      id = R.id.colorblindbutton;
      AppCompatButton colorblindbutton = ViewBindings.findChildViewById(rootView, id);
      if (colorblindbutton == null) {
        break missingId;
      }

      ConstraintLayout coordinatorLayout = (ConstraintLayout) rootView;

      id = R.id.devoptions;
      AppCompatButton devoptions = ViewBindings.findChildViewById(rootView, id);
      if (devoptions == null) {
        break missingId;
      }

      id = R.id.exitbutton;
      AppCompatButton exitbutton = ViewBindings.findChildViewById(rootView, id);
      if (exitbutton == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.myIntructors;
      AppCompatButton myIntructors = ViewBindings.findChildViewById(rootView, id);
      if (myIntructors == null) {
        break missingId;
      }

      id = R.id.resetoptionsbutton;
      AppCompatButton resetoptionsbutton = ViewBindings.findChildViewById(rootView, id);
      if (resetoptionsbutton == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityOptionsBinding((ConstraintLayout) rootView, Accessibility, TextToSpeech,
          colorblindbutton, coordinatorLayout, devoptions, exitbutton, imageView4, myIntructors,
          resetoptionsbutton, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
